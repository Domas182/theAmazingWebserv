#	block identifiers:
#		server		servers are sockets that listen to one or multiple ip:port
#					combinations. They can also be referenced by unique name(s).
#					They operate in the directory specified as root and can
#					process all request types, but no CGI or directory listing

#		location	locations serve as proxies inside the server to enable some
#					additional features such as redirection, CGI and
#					directory listing


#	server identifiers:
#		ip-address		The ip of the server inside the cluster.
#						It must be specified once per server block
#		port			The port(s) the server listens to.
#						At least one port must be specified per server block
#		-> note: There must never be a duplicate ip-address:port combination

#		server_name		An alias for the default (first) ip:port combination of
#						the server in order to make accessing servers more intuitive.
#						Not required and multiple names are possible, but each of them
#						must be unique across all server blocks

#		root			The directory the server operates in (including subdirectories).
#						Must be specified once per server block
#		index			The default file the server answers with if the request is
#						the root directory (defaults to index.html)
#						Can be specified once

#		allowed_methods	The HTTP methods allowed inside the server block.
#						Can be specified multiple times.
#						Available options are: GET, POST, DELETE and PUT
#		-> note: Locations may define their own allowed_methods

#		redirection		Key-value-pairs of files or directories that resembles the
#						redirection of the key to the value.
#						Can be specified multiple times.


#		max_client_body_size	The maximum body size of the response.
#								Can be specified once (defaults to UINT32_MAX)

#		errorpages		A directory to look for [statuscode].html files.
#						Can be specified once. If none are provided a default path is used

#		location		See description below.
#						Can be specified multiple times.


#	location identifiers:
#		prefix			The string right after the location identifier.
#						It specifies the directory the location block looks for in the
#						request URI.
#						Must (obviously) be specified once
#		root			The actual directory of the location inside the server
#						Any matching prefixes will be redirected to the root directory
#						Can be specified once (defaults to the prefix directory)
#		index			The file that will be sent if the request is the root directory
#						of this location.
#						Must be specified once (unlike the server it doesn't have a default)

#		allowed_methods	Same as in the server block.
#		redirection		Same as in the server block.
#		max_client_body_size	Same as in the server block.

#		allowed_scripts	Key-value-pairs of a script extension (e.g. py for python)
#						and the path to the executable. Separated by a = sign.
#						The executable name must be a binary with execution permissions.
#						Can be specified multiple times

#		directory_listing	Enables / Disables directory listing in the location block.
#							Can be specified once (defaults to false)


server
{
	server_name				lilServ
	ip-address				127.0.0.1
	port					8080
	port					8081
	root					testServerDir/
	allowed_methods			GET
	index					index.html
	# max_client_body_size	10000
	errorpages	config/default_error_pages

	redirection			test = hello
	# location /
	# {
	# 	root					/
	# 	allowed_methods			GET POST DELETE
	# 	allowed_scripts			python = /usr/bin/python
	# 	allowed_scripts			php = /usr/bin/php
	# 	index					index.html
	# 	directory_listing		false
	# }

	location /test/
	{
		allowed_methods		GET POST
		allowed_scripts			py = /usr/bin/python
		allowed_scripts			php = /usr/bin/php
		index				Form.html
		directory_listing	true
		redirection			hello = world
		redirection			world = tobi
		redirection			tobi = uploads
	}

	location /test/uploads/
	{
		root				/test/uploads/
		allowed_methods		GET PUT DELETE POST
		directory_listing	true
		index				lol.html
	}

	location /cookie_test/
	{
		root				/cookie_test/
		allowed_methods		GET
		index				cookie_index.py
		allowed_scripts		py = /usr/bin/python
	}
}


{
    host:   127.0.0.1        ;
    port:  18000     ;
    root: ./default_pages     ; //define directory
    index:  index.html; // default file to answer ??
    server_name: welcome.awesome;
    error: ./default_pages/errors/;
    limit_body: 1024; // where to set this?
    http_methods:   HEAD   ;
    http_redirects: non; // status code 301 permantly
    directory_listing:    off   ; // if there is no efault page in the directory show or not show the file structure.
    download: ./default_pages/downloads/;
    cgi: non; // .php
}
server {
    host: localhost;
    port:   7777,       4547;
    root:   ./example_sites/example2;
    index:  index.html;
    server_name: withpicture.awesome;
    error: ./default_pages/errors/;
    limit_body: 1024;
    http_methods: GET,  POST;
    http_redirects: non;
    directory_listing:      off ;
    download: ./default_pages/downloads/;
    cgi: non;
}
server {
    host: localhost;
    port: 8100;
    root:   ./example_sites/phptestsite;
    index:  index.html;
    server_name: phpgenious.awesome;
    error: ./default_pages/errors/;
    limit_body: 1024;
    http_methods:   GET,PUT,    HEAD;
    http_redirects: non;
    directory_listing: off;
    download: ./default_pages/downloads/;
    cgi: .php;
}
server {
    host: localhost;
    port: 9101;
    root:   ./example_sites/perltestsite;
    index:  firsperl.pl;
    server_name: plsitetest.awesome;
    error: ./default_pages/errors/;
    limit_body: 1024;
    http_methods:   GET,PUT,    HEAD;
    http_redirects: non;
    directory_listing: off;
    download: ./default_pages/downloads/;
    cgi: .pl;
}
# server {
#   host: localhost;
#   port: 18000;
#   root:   site;
#   index:  index.js;
#   server_name: phptest.awesome
#   p: on;
# }
# server {
#   host: localhost;
#   port: 8001;
#   root:   site2;
#   index:  index.php;
# }
## location staffs?
## what happenes with different requests on cgi
# Setup the configuration file as follow:
# - / must answer to GET request ONLY
# - /put_test/* must answer to PUT request and save files to a
#  directory of your choice
# - any file with .bla as extension must answer to POST request
# by calling the cgi_test executable
# - /post_body must answer anything to POST request with a maxBody of 100
# - /directory/ must answer to GET request and the root of
# it would be the repository
# YoupiBanane and if no file are requested, it should search
# for youpi.bad_extension files